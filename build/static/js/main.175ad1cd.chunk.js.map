{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderLeader","leader","tag","left","object","src","image","alt","name","body","heading","designation","description","About","props","leaders","map","in","id","isLoading","classname","errMess","to","active","title","list","RenderMenuItem","dish","width","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","resetFeedbackForm","postFeedback","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","state","isModalOpen","toggleModalComment","setState","postComment","dishId","rating","author","comment","Fragment","outline","onClick","isOpen","toggle","ml","xs","RenderDish","transformProps","exitTransform","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","class","Header","isNavOpen","toggleNav","toggleModal","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","RenderCard","item","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leadersLoading","leadersErrMess","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","message","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchPromos","fetchComments","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","feedback","newFeedback","firstname","lastname","telnum","email","agree","contactType","data","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.175ad1cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({ leader }) {\r\n\r\n    return (\r\n        <Media tag=\"li\">\r\n            <Media left>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    );\r\n\r\n\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in >\r\n                <div key={leader.id} className=\"col-12 m-1\">\r\n                    <RenderLeader leader={leader} />\r\n                </div>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div classname=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div classname=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.leaders.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                        <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                            P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            <Stagger in>\r\n                                {leaders}\r\n                            </Stagger>\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div classname=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div classname=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" />\r\n                                            {' '}<strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Label, Row, Col, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleModalComment = this.toggleModalComment.bind(this);\r\n\r\n    }\r\n\r\n    toggleModalComment() {\r\n\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModalComment();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline color=\"secondary\" onClick={this.toggleModalComment}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModalComment}>\r\n                    <ModalHeader toggle={this.toggleModalComment}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\" ml=\"3\">\r\n                                <Label htmlFor=\"rating\" xs={12}>Rating</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" xs={12}>Your Name</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" xs={12}>Comment</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col xs={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n\r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div classname=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div classname=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, FormGroup, Form, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\" ><span className=\"fa fa-home fa-lg\" ></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\" ><span className=\"fa fa-info fa-lg\" ></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\" ><span className=\"fa fa-list fa-lg\" ></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\" ><span className=\"fa fa-address-card fa-lg\" ></span> Contact Us </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Username</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            < Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promosLoading}\r\n                        errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD-COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import *  as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ':' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ':' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: feedback.firstname,\r\n        lastname: feedback.lastname,\r\n        telnum: feedback.telnum,\r\n        email: feedback.email,\r\n        agree: feedback.agree,\r\n        contactType: feedback.contactType,\r\n        message: feedback.message\r\n    };\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(data => alert('Thank you for your feedback!\\n' + JSON.stringify(data)))\r\n        .catch(error => { console.log('Post feedback', error.message); alert('Your feedback could not be posted\\nError: ' + error.message); });\r\n};\r\n","import React, { Component } from 'react';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => { dispatch(fetchComments()) },\r\n    fetchPromos: () => { dispatch(fetchPromos()) },\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) }\r\n\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchPromos();\r\n        this.props.fetchComments();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                            <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} isLoading={this.props.leaders.isLoading} errMess={this.props.leaders.errMess} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import *  as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload }\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, dishes: [] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import *  as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, isLoading: false, errMess: null, comments: action.payload }\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, comments: [] }\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import *  as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload }\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, promotions: [] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import *  as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload }\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}